28.11.2022
1 занятие:

1. Типы архитектур Clean, N-Tier (Time 5:18):
https://www.youtube.com/watch?v=j6u7Pw6dyUw&list=PLdo4fOcmZ0oVlqu_V8EXUDDnPsYwemxjn&index=74
Дополнительно просмотрено https://www.youtube.com/watch?v=WYh5khUsv_o (Многослойная архитектура - NTier vs NLayer)
				  https://www.youtube.com/watch?v=fWdBH0TkQtU&list=PLQC2_0cDcSKAcuWNsWAwF8GT_lCU9QZNs&index=37 (принципы SOLID)	
				  https://www.youtube.com/watch?v=FK-Br0_d3Og&list=PLQC2_0cDcSKAcuWNsWAwF8GT_lCU9QZNs&index=38 (Clean Architecture)
				  

https://learn.microsoft.com/ru-ru/dotnet/architecture/modern-web-apps-azure/common-web-application-architectures - статья слишком сложна для понимания


https://learn.microsoft.com/en-us/azure/architecture/guide/architecture-styles/

микросервисы: https://learn.microsoft.com/en-us/azure/architecture/microservices/design/api-design

REST:
https://habr.com/ru/post/38730/


2. Создание проекта БД в VS, публикация, добавление первой таблицы и связей посредством скрипта.

3. Пакеты:
Autofac,
Moq, 
Automapper,
JsonSerilization,
jQuerry,
Botstrap,
Nunit

Функционал,
Авторизация,
Локализация,
Работа по ролям.


Паттерны:
UnitOfWork
Repository

ADO, Entity Framework Core (EF Core).

ПРинципы SOLID:

Нормализация БД:
https://habr.com/ru/post/254773/


ДЗ:
самостоятельно наполнить БД оставшимися сущностями
видео о HTTP (жизненный цикл запроса):

!!!!! посмотреть обязательно!!!! https://deworker.pro/edu/series/http-basics/http-lifecycle

https://developer.mozilla.org/ru/docs/Web/HTTP



============================06.12.2022 (2е занятие)==============================================
__________________________________________________________________________________________________
При добавлении данных в главную таблицу данные зависимых таблиц должны быть заполнены ранее, 
т.е. главная таблица заполняется последней (в файле Script.PostDeployment.sql)

ДЗ:
все таблицы переименовать в ед. число ++++++++++++++
создать ключи
видео о HTTP (жизненный цикл запроса):
==========================================================================================
!!!!! посмотреть обязательно!!!! https://deworker.pro/edu/series/http-basics/http-lifecycle +++++++
============================================================================================
Добавить связи между таблицами.
Создать DAL слой добавить тесты для тестирования CRUD-методов для всех сущностей
ORM:
https://metanit.com/sharp/ado.php
https://metanit.com/sharp/efcore/1.1.php

все таблицы в базе сделать в ед числе.

nullable - типы почитать


============================12.12.2022 (3е занятие)==============================================
Написание тестов (NUnit - метод AreEquals()).
Структуры данных С#, коллекции:
Array, ArrayList, List
Дженерики (основное назначение)
Базовый тип object и его свойства и методы:
https://www.youtube.com/watch?v=Nu5z6fcjQ10
https://metanit.com/sharp/tutorial/3.10.php
также должно быть и у Шевчука что-то, позже загляну поищу.
ВАЖНО: разобраться методы Equals(), GetHashCode
приведение типов (as, is)
Общее: 
понятие класс - абстрактный класс - интерфейс
ранее/позднее связывание. Хорошие примеры тут:
 https://www.bestprog.net/ru/2020/04/10/c-late-and-early-binding-polymorphism-basic-concepts-examples-passing-a-reference-to-a-base-class-in-a-method_ru/

Д/з
1. Внимательно изучить инфу в видео по типу object: 
https://www.youtube.com/watch?v=Nu5z6fcjQ10
(желательно повторить примеры в отдельном солюшене по памяти)
В идеале посмотреть вот это (Вадим, объясняет тяжело, но почти всегда так, как написано в Рихтере. Видео длинное и нудное, сложнее, чем Шевчук, но благодаря Вадиму, я смог выполнить задания на внешнем тренинге в Epam):
https://www.youtube.com/watch?v=7XiK3rSq2OI
2. Еще раз посмотреть видео по дженерикам и коллекциям из ITVDN.
3. Самостоятельно на основании теоретической инфы, что просмотришь и двух примеров, которые я тебе скинул вчера вечером сам переопредели эти два метода и проверь в дебаге выполнения теста

============================21.12.2022============================
Занятие 4
Базовый тип object и его свойства и методы необходимо выучить и знать!!!!
Методы:
GetHashCode()
Equals()

Upcasting
Downcasting

Д/з изучить 
1. Агрегация, ассоциация, композиция, наследование
2. async Task await (ITVDN урок 9. Делегаты, урок 13. Потоки из Essential, уроки 11-15 Professional)

thread.IsBackground = true; // Раскомментировать, иначе будем ждать окончания работы вторичного потока. НЕ РАБОТАЕТ, ПОЧЕМУ?

3. IQueryable vs IEnumerable

============================23.01.2023============================
Занятие 5


============================25.01.2023============================
Занятие 6


============================30.01.2023============================
Занятие 7

============================02.02.2023============================
Занятие 8
============================22.02.2023============================
Занятие 9
============================01.03.2023============================
Занятие 10
============================07.03.2023============================
Занятие 11
Доделать таблицу ПОО -> избавиться от Id
Перевести БД на русский
Реализовать алгоритм в сервисах ReportPdo

============================15.03.2023============================
Занятие 12
============================23.03.2023============================
Занятие 13
Convert Excel to Json
============================26.03.2023============================
Занятие 14
============================30.03.2023============================
Занятие 15

https://www.c-sharpcorner.com/article/net-entity-framework-core-generic-async-operations-with-unit-of-work-generic-re/

============================14.04.2023============================
Занятие 16

============================27.04.2023============================
Занятие 17

============================21.06.2023============================
Занятие 18
д/з
1. Migration - миграция базы данных
https://learn.microsoft.com/ru-ru/ef/core/managing-schemas/


2. ASP.NET Core Identity на метаните или msdn
https://metanit.com/sharp/aspnet5/16.1.php
https://learn.microsoft.com/ru-ru/aspnet/core/security/authentication/identity?view=aspnetcore-7.0&tabs=visual-studio

============================19.07.2023============================
Занятие 19

Этапы создания миграции по подходу code-first
1. Создать проект ASP.NET Core MVC .Net 7.0
2. Добавить класс (модель) в папку Models
3. Добавить NugetPackets:
	Microsoft.EntityFrameworkCore.SqlServer
	Microsoft.EntityFrameworkCore.Tools
	Microsoft.EntityFrameworkCore.Design
Аналогично сработает команда в командной строке с прописанным путем к проекту
	dotnet tool install --global dotnet-ef 
4. В проект добавить контекст данных приложения (создать класс : DbContext) 
 public class ApplicationContext : DbContext
    {
        public ApplicationContext(DbContextOptions<ApplicationContext> options) : base(options)
        {
        }

        public DbSet<Blog> Blog { get; set; }

    }
5. В Program.cs добавить сервис, в который через параметр передать строку подключения к базе данных
		builder.Services.AddDbContext<ApplicationContext>(options =>
            options.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection")));
6. В appsettings.json добавить строку подключения
	"AllowedHosts": "*",
		"ConnectionStrings": {
			"DefaultConnection": "Server=(localdb)\\mssqllocaldb;Database=НазваниеSolution.DataBase;Trusted_Connection=True;MultipleActiveResultSets=true"
 
7. В командной строке (под Windows) перейти в каталог с проектом и создаем миграцию командой:
		dotnet ef migrations add InitialCreate 
В проекте появится папка Migrations, в которой создастся класс с названием InitialCreate - описание создаваемой миграции (таблицы будущей БД)

8. Обновление (создание) базы данных:
		dotnet ef database update
На сервере появиться БД с названием, указанным в командной строке и таблицами, соответствующими созданным моделям (классам в папке Models)

9. Расширение (модификация) модели и соответствующей ей таблицы:
	- в модель добавляется новое свойство;
	- создается новая миграция 
		dotnet ef migrations add имя новой миграции
	- обновляется БД
		dotnet ef database update

============================02.08.2023============================
Занятие 20

